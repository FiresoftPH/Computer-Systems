Simulator report for EightBitALU
Thu Feb 16 21:49:39 2023
Quartus II Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 240.0 ns     ;
; Simulation Netlist Size     ; 165 nodes    ;
; Simulation Coverage         ;      87.88 % ;
; Total Number of Transitions ; 2869         ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Cyclone II   ;
+-----------------------------+--------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                           ;
+--------------------------------------------------------------------------------------------+-----------------+---------------+
; Option                                                                                     ; Setting         ; Default Value ;
+--------------------------------------------------------------------------------------------+-----------------+---------------+
; Simulation mode                                                                            ; Functional      ; Timing        ;
; Start time                                                                                 ; 0 ns            ; 0 ns          ;
; Simulation results format                                                                  ; CVWF            ;               ;
; Vector input source                                                                        ; EightBitALU.vwf ;               ;
; Add pins automatically to simulation output waveforms                                      ; On              ; On            ;
; Check outputs                                                                              ; Off             ; Off           ;
; Report simulation coverage                                                                 ; On              ; On            ;
; Display complete 1/0 value coverage report                                                 ; On              ; On            ;
; Display missing 1-value coverage report                                                    ; On              ; On            ;
; Display missing 0-value coverage report                                                    ; On              ; On            ;
; Detect setup and hold time violations                                                      ; Off             ; Off           ;
; Detect glitches                                                                            ; Off             ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off             ; Off           ;
; Generate Signal Activity File                                                              ; Off             ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off             ; Off           ;
; Group bus channels in simulation results                                                   ; Off             ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On              ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE      ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off             ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; Off             ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto            ; Auto          ;
+--------------------------------------------------------------------------------------------+-----------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      87.88 % ;
; Total nodes checked                                 ; 165          ;
; Total output ports checked                          ; 165          ;
; Total output ports with complete 1/0-value coverage ; 145          ;
; Total output ports with no 1/0-value coverage       ; 18           ;
; Total output ports with no 1-value coverage         ; 18           ;
; Total output ports with no 0-value coverage         ; 20           ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                                                                                                                                        ;
+------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                      ; Output Port Name                                                                               ; Output Port Type ;
+------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------+------------------+
; |eightbitalu|Cout                                                                              ; |eightbitalu|Cout                                                                              ; pin_out          ;
; |eightbitalu|A[7]                                                                              ; |eightbitalu|A[7]                                                                              ; out              ;
; |eightbitalu|A[6]                                                                              ; |eightbitalu|A[6]                                                                              ; out              ;
; |eightbitalu|A[5]                                                                              ; |eightbitalu|A[5]                                                                              ; out              ;
; |eightbitalu|A[4]                                                                              ; |eightbitalu|A[4]                                                                              ; out              ;
; |eightbitalu|A[3]                                                                              ; |eightbitalu|A[3]                                                                              ; out              ;
; |eightbitalu|A[2]                                                                              ; |eightbitalu|A[2]                                                                              ; out              ;
; |eightbitalu|A[1]                                                                              ; |eightbitalu|A[1]                                                                              ; out              ;
; |eightbitalu|A[0]                                                                              ; |eightbitalu|A[0]                                                                              ; out              ;
; |eightbitalu|B[7]                                                                              ; |eightbitalu|B[7]                                                                              ; out              ;
; |eightbitalu|B[6]                                                                              ; |eightbitalu|B[6]                                                                              ; out              ;
; |eightbitalu|B[5]                                                                              ; |eightbitalu|B[5]                                                                              ; out              ;
; |eightbitalu|B[4]                                                                              ; |eightbitalu|B[4]                                                                              ; out              ;
; |eightbitalu|B[3]                                                                              ; |eightbitalu|B[3]                                                                              ; out              ;
; |eightbitalu|B[2]                                                                              ; |eightbitalu|B[2]                                                                              ; out              ;
; |eightbitalu|B[1]                                                                              ; |eightbitalu|B[1]                                                                              ; out              ;
; |eightbitalu|B[0]                                                                              ; |eightbitalu|B[0]                                                                              ; out              ;
; |eightbitalu|R[7]                                                                              ; |eightbitalu|R[7]                                                                              ; pin_out          ;
; |eightbitalu|R[6]                                                                              ; |eightbitalu|R[6]                                                                              ; pin_out          ;
; |eightbitalu|R[5]                                                                              ; |eightbitalu|R[5]                                                                              ; pin_out          ;
; |eightbitalu|R[4]                                                                              ; |eightbitalu|R[4]                                                                              ; pin_out          ;
; |eightbitalu|R[3]                                                                              ; |eightbitalu|R[3]                                                                              ; pin_out          ;
; |eightbitalu|R[2]                                                                              ; |eightbitalu|R[2]                                                                              ; pin_out          ;
; |eightbitalu|R[1]                                                                              ; |eightbitalu|R[1]                                                                              ; pin_out          ;
; |eightbitalu|R[0]                                                                              ; |eightbitalu|R[0]                                                                              ; pin_out          ;
; |eightbitalu|OneBitaALU:inst|inst1                                                             ; |eightbitalu|OneBitaALU:inst|inst1                                                             ; out0             ;
; |eightbitalu|OneBitaALU:inst|inst                                                              ; |eightbitalu|OneBitaALU:inst|inst                                                              ; out0             ;
; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; out0             ;
; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0  ; |eightbitalu|OneBitaALU:inst|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0  ; out0             ;
; |eightbitalu|OneBitaALU:inst|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1  ; |eightbitalu|OneBitaALU:inst|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1  ; out0             ;
; |eightbitalu|OneBitaALU:inst|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]    ; |eightbitalu|OneBitaALU:inst|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst|OneBitAdder:inst2|inst4                                           ; |eightbitalu|OneBitaALU:inst|OneBitAdder:inst2|inst4                                           ; out0             ;
; |eightbitalu|OneBitaALU:inst|OneBitAdder:inst2|inst1                                           ; |eightbitalu|OneBitaALU:inst|OneBitAdder:inst2|inst1                                           ; out0             ;
; |eightbitalu|OneBitaALU:inst|OneBitAdder:inst2|inst2                                           ; |eightbitalu|OneBitaALU:inst|OneBitAdder:inst2|inst2                                           ; out0             ;
; |eightbitalu|OneBitaALU:inst|OneBitAdder:inst2|inst                                            ; |eightbitalu|OneBitaALU:inst|OneBitAdder:inst2|inst                                            ; out0             ;
; |eightbitalu|OneBitaALU:inst|OneBitAdder:inst2|xor3:inst11|1                                   ; |eightbitalu|OneBitaALU:inst|OneBitAdder:inst2|xor3:inst11|1                                   ; out0             ;
; |eightbitalu|OneBitaALU:inst|OneBitAdder:inst2|xor3:inst11|3                                   ; |eightbitalu|OneBitaALU:inst|OneBitAdder:inst2|xor3:inst11|3                                   ; out0             ;
; |eightbitalu|OneBitaALU:inst2|inst1                                                            ; |eightbitalu|OneBitaALU:inst2|inst1                                                            ; out0             ;
; |eightbitalu|OneBitaALU:inst2|inst                                                             ; |eightbitalu|OneBitaALU:inst2|inst                                                             ; out0             ;
; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]   ; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]   ; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0             ; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0             ; out0             ;
; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]  ; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]  ; out0             ;
; |eightbitalu|OneBitaALU:inst2|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst2|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst2|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; |eightbitalu|OneBitaALU:inst2|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; out0             ;
; |eightbitalu|OneBitaALU:inst2|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; |eightbitalu|OneBitaALU:inst2|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst2|OneBitAdder:inst2|inst4                                          ; |eightbitalu|OneBitaALU:inst2|OneBitAdder:inst2|inst4                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst2|OneBitAdder:inst2|inst1                                          ; |eightbitalu|OneBitaALU:inst2|OneBitAdder:inst2|inst1                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst2|OneBitAdder:inst2|inst2                                          ; |eightbitalu|OneBitaALU:inst2|OneBitAdder:inst2|inst2                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst2|OneBitAdder:inst2|inst                                           ; |eightbitalu|OneBitaALU:inst2|OneBitAdder:inst2|inst                                           ; out0             ;
; |eightbitalu|OneBitaALU:inst2|OneBitAdder:inst2|xor3:inst11|1                                  ; |eightbitalu|OneBitaALU:inst2|OneBitAdder:inst2|xor3:inst11|1                                  ; out0             ;
; |eightbitalu|OneBitaALU:inst2|OneBitAdder:inst2|xor3:inst11|3                                  ; |eightbitalu|OneBitaALU:inst2|OneBitAdder:inst2|xor3:inst11|3                                  ; out0             ;
; |eightbitalu|OneBitaALU:inst4|inst1                                                            ; |eightbitalu|OneBitaALU:inst4|inst1                                                            ; out0             ;
; |eightbitalu|OneBitaALU:inst4|inst                                                             ; |eightbitalu|OneBitaALU:inst4|inst                                                             ; out0             ;
; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]   ; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]   ; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0             ; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0             ; out0             ;
; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]  ; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]  ; out0             ;
; |eightbitalu|OneBitaALU:inst4|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst4|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst4|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; |eightbitalu|OneBitaALU:inst4|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; out0             ;
; |eightbitalu|OneBitaALU:inst4|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; |eightbitalu|OneBitaALU:inst4|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst4|OneBitAdder:inst2|inst4                                          ; |eightbitalu|OneBitaALU:inst4|OneBitAdder:inst2|inst4                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst4|OneBitAdder:inst2|inst1                                          ; |eightbitalu|OneBitaALU:inst4|OneBitAdder:inst2|inst1                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst4|OneBitAdder:inst2|inst2                                          ; |eightbitalu|OneBitaALU:inst4|OneBitAdder:inst2|inst2                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst4|OneBitAdder:inst2|inst                                           ; |eightbitalu|OneBitaALU:inst4|OneBitAdder:inst2|inst                                           ; out0             ;
; |eightbitalu|OneBitaALU:inst4|OneBitAdder:inst2|xor3:inst11|1                                  ; |eightbitalu|OneBitaALU:inst4|OneBitAdder:inst2|xor3:inst11|1                                  ; out0             ;
; |eightbitalu|OneBitaALU:inst4|OneBitAdder:inst2|xor3:inst11|3                                  ; |eightbitalu|OneBitaALU:inst4|OneBitAdder:inst2|xor3:inst11|3                                  ; out0             ;
; |eightbitalu|OneBitaALU:inst6|inst1                                                            ; |eightbitalu|OneBitaALU:inst6|inst1                                                            ; out0             ;
; |eightbitalu|OneBitaALU:inst6|inst                                                             ; |eightbitalu|OneBitaALU:inst6|inst                                                             ; out0             ;
; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]   ; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]   ; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0             ; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0             ; out0             ;
; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]  ; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]  ; out0             ;
; |eightbitalu|OneBitaALU:inst6|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst6|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst6|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; |eightbitalu|OneBitaALU:inst6|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; out0             ;
; |eightbitalu|OneBitaALU:inst6|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; |eightbitalu|OneBitaALU:inst6|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst6|OneBitAdder:inst2|inst4                                          ; |eightbitalu|OneBitaALU:inst6|OneBitAdder:inst2|inst4                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst6|OneBitAdder:inst2|inst1                                          ; |eightbitalu|OneBitaALU:inst6|OneBitAdder:inst2|inst1                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst6|OneBitAdder:inst2|inst2                                          ; |eightbitalu|OneBitaALU:inst6|OneBitAdder:inst2|inst2                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst6|OneBitAdder:inst2|inst                                           ; |eightbitalu|OneBitaALU:inst6|OneBitAdder:inst2|inst                                           ; out0             ;
; |eightbitalu|OneBitaALU:inst6|OneBitAdder:inst2|xor3:inst11|1                                  ; |eightbitalu|OneBitaALU:inst6|OneBitAdder:inst2|xor3:inst11|1                                  ; out0             ;
; |eightbitalu|OneBitaALU:inst6|OneBitAdder:inst2|xor3:inst11|3                                  ; |eightbitalu|OneBitaALU:inst6|OneBitAdder:inst2|xor3:inst11|3                                  ; out0             ;
; |eightbitalu|OneBitaALU:inst1|inst1                                                            ; |eightbitalu|OneBitaALU:inst1|inst1                                                            ; out0             ;
; |eightbitalu|OneBitaALU:inst1|inst                                                             ; |eightbitalu|OneBitaALU:inst1|inst                                                             ; out0             ;
; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]   ; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]   ; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0             ; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0             ; out0             ;
; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]  ; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]  ; out0             ;
; |eightbitalu|OneBitaALU:inst1|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst1|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst1|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; |eightbitalu|OneBitaALU:inst1|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; out0             ;
; |eightbitalu|OneBitaALU:inst1|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; |eightbitalu|OneBitaALU:inst1|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst1|OneBitAdder:inst2|inst4                                          ; |eightbitalu|OneBitaALU:inst1|OneBitAdder:inst2|inst4                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst1|OneBitAdder:inst2|inst1                                          ; |eightbitalu|OneBitaALU:inst1|OneBitAdder:inst2|inst1                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst1|OneBitAdder:inst2|inst2                                          ; |eightbitalu|OneBitaALU:inst1|OneBitAdder:inst2|inst2                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst1|OneBitAdder:inst2|inst                                           ; |eightbitalu|OneBitaALU:inst1|OneBitAdder:inst2|inst                                           ; out0             ;
; |eightbitalu|OneBitaALU:inst1|OneBitAdder:inst2|xor3:inst11|1                                  ; |eightbitalu|OneBitaALU:inst1|OneBitAdder:inst2|xor3:inst11|1                                  ; out0             ;
; |eightbitalu|OneBitaALU:inst1|OneBitAdder:inst2|xor3:inst11|3                                  ; |eightbitalu|OneBitaALU:inst1|OneBitAdder:inst2|xor3:inst11|3                                  ; out0             ;
; |eightbitalu|OneBitaALU:inst3|inst1                                                            ; |eightbitalu|OneBitaALU:inst3|inst1                                                            ; out0             ;
; |eightbitalu|OneBitaALU:inst3|inst                                                             ; |eightbitalu|OneBitaALU:inst3|inst                                                             ; out0             ;
; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]   ; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]   ; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0             ; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0             ; out0             ;
; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]  ; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]  ; out0             ;
; |eightbitalu|OneBitaALU:inst3|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst3|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst3|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; |eightbitalu|OneBitaALU:inst3|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; out0             ;
; |eightbitalu|OneBitaALU:inst3|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; |eightbitalu|OneBitaALU:inst3|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst3|OneBitAdder:inst2|inst4                                          ; |eightbitalu|OneBitaALU:inst3|OneBitAdder:inst2|inst4                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst3|OneBitAdder:inst2|inst1                                          ; |eightbitalu|OneBitaALU:inst3|OneBitAdder:inst2|inst1                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst3|OneBitAdder:inst2|inst2                                          ; |eightbitalu|OneBitaALU:inst3|OneBitAdder:inst2|inst2                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst3|OneBitAdder:inst2|inst                                           ; |eightbitalu|OneBitaALU:inst3|OneBitAdder:inst2|inst                                           ; out0             ;
; |eightbitalu|OneBitaALU:inst3|OneBitAdder:inst2|xor3:inst11|1                                  ; |eightbitalu|OneBitaALU:inst3|OneBitAdder:inst2|xor3:inst11|1                                  ; out0             ;
; |eightbitalu|OneBitaALU:inst3|OneBitAdder:inst2|xor3:inst11|3                                  ; |eightbitalu|OneBitaALU:inst3|OneBitAdder:inst2|xor3:inst11|3                                  ; out0             ;
; |eightbitalu|OneBitaALU:inst5|inst1                                                            ; |eightbitalu|OneBitaALU:inst5|inst1                                                            ; out0             ;
; |eightbitalu|OneBitaALU:inst5|inst                                                             ; |eightbitalu|OneBitaALU:inst5|inst                                                             ; out0             ;
; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]   ; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]   ; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0             ; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0             ; out0             ;
; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]  ; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]  ; out0             ;
; |eightbitalu|OneBitaALU:inst5|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst5|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst5|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; |eightbitalu|OneBitaALU:inst5|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; out0             ;
; |eightbitalu|OneBitaALU:inst5|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; |eightbitalu|OneBitaALU:inst5|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst5|OneBitAdder:inst2|inst4                                          ; |eightbitalu|OneBitaALU:inst5|OneBitAdder:inst2|inst4                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst5|OneBitAdder:inst2|inst1                                          ; |eightbitalu|OneBitaALU:inst5|OneBitAdder:inst2|inst1                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst5|OneBitAdder:inst2|inst2                                          ; |eightbitalu|OneBitaALU:inst5|OneBitAdder:inst2|inst2                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst5|OneBitAdder:inst2|inst                                           ; |eightbitalu|OneBitaALU:inst5|OneBitAdder:inst2|inst                                           ; out0             ;
; |eightbitalu|OneBitaALU:inst5|OneBitAdder:inst2|xor3:inst11|1                                  ; |eightbitalu|OneBitaALU:inst5|OneBitAdder:inst2|xor3:inst11|1                                  ; out0             ;
; |eightbitalu|OneBitaALU:inst5|OneBitAdder:inst2|xor3:inst11|3                                  ; |eightbitalu|OneBitaALU:inst5|OneBitAdder:inst2|xor3:inst11|3                                  ; out0             ;
; |eightbitalu|OneBitaALU:inst7|inst1                                                            ; |eightbitalu|OneBitaALU:inst7|inst1                                                            ; out0             ;
; |eightbitalu|OneBitaALU:inst7|inst                                                             ; |eightbitalu|OneBitaALU:inst7|inst                                                             ; out0             ;
; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]   ; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]   ; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0             ; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|_~0             ; out0             ;
; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]  ; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]  ; out0             ;
; |eightbitalu|OneBitaALU:inst7|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst7|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst7|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; |eightbitalu|OneBitaALU:inst7|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; out0             ;
; |eightbitalu|OneBitaALU:inst7|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; |eightbitalu|OneBitaALU:inst7|mux:inst9|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; out0             ;
; |eightbitalu|OneBitaALU:inst7|OneBitAdder:inst2|inst4                                          ; |eightbitalu|OneBitaALU:inst7|OneBitAdder:inst2|inst4                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst7|OneBitAdder:inst2|inst1                                          ; |eightbitalu|OneBitaALU:inst7|OneBitAdder:inst2|inst1                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst7|OneBitAdder:inst2|inst2                                          ; |eightbitalu|OneBitaALU:inst7|OneBitAdder:inst2|inst2                                          ; out0             ;
; |eightbitalu|OneBitaALU:inst7|OneBitAdder:inst2|inst                                           ; |eightbitalu|OneBitaALU:inst7|OneBitAdder:inst2|inst                                           ; out0             ;
; |eightbitalu|OneBitaALU:inst7|OneBitAdder:inst2|xor3:inst11|1                                  ; |eightbitalu|OneBitaALU:inst7|OneBitAdder:inst2|xor3:inst11|1                                  ; out0             ;
; |eightbitalu|OneBitaALU:inst7|OneBitAdder:inst2|xor3:inst11|3                                  ; |eightbitalu|OneBitaALU:inst7|OneBitAdder:inst2|xor3:inst11|3                                  ; out0             ;
+------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                                                                                                                             ;
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                       ; Output Port Name                                                                                ; Output Port Type ;
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------+------------------+
; |eightbitalu|OP[1]                                                                              ; |eightbitalu|OP[1]                                                                              ; out              ;
; |eightbitalu|OP[0]                                                                              ; |eightbitalu|OP[0]                                                                              ; out              ;
; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]     ; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]     ; out0             ;
; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0  ; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0  ; out0             ;
; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                                                                                                                                             ;
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                       ; Output Port Name                                                                                ; Output Port Type ;
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------+------------------+
; |eightbitalu|Binvert                                                                            ; |eightbitalu|Binvert                                                                            ; out              ;
; |eightbitalu|Cin                                                                                ; |eightbitalu|Cin                                                                                ; out              ;
; |eightbitalu|OP[1]                                                                              ; |eightbitalu|OP[1]                                                                              ; out              ;
; |eightbitalu|OP[0]                                                                              ; |eightbitalu|OP[0]                                                                              ; out              ;
; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]     ; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]     ; out0             ;
; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0  ; |eightbitalu|OneBitaALU:inst|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0  ; out0             ;
; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst2|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst4|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst6|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst1|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst3|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst5|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |eightbitalu|OneBitaALU:inst7|mux:inst10|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II Simulator
    Info: Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition
    Info: Processing started: Thu Feb 16 21:49:39 2023
Info: Command: quartus_sim --read_settings_files=on --write_settings_files=off EightBitALU -c EightBitALU
Info: Using vector source file "C:/Users/Firesoft/Documents/Computing/Computer-Systems/EightBitALU/EightBitALU.vwf"
Info: Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info: Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info: Simulation partitioned into 1 sub-simulations
Info: Simulation coverage is      87.88 %
Info: Number of transitions in simulation is 2869
Info: Quartus II Simulator was successful. 0 errors, 0 warnings
    Info: Peak virtual memory: 155 megabytes
    Info: Processing ended: Thu Feb 16 21:49:39 2023
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:00


